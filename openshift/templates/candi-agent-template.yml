kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: candi-agent
  annotations:
    description: aries agent connect to BCovrin test ledger
    tags: experimentation, aries, sovrin, issuer, verifier
objects:
#
# aries cloud agent
#
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: candi-agent
- kind: BuildConfig
  apiVersion: v1
  metadata:
    labels:
      app: candi-agent
    name: candi-agent
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'candi-agent:latest'
    resources: {}
    successfulBuildsHistoryLimit: 5
    failedBuildsHistoryLimit: 5
    strategy:
      type: Docker
      dockerStrategy:
        dockerfilePath: Dockerfile.agent
    postCommit: {}
    source:
      contextDir: docker
      type: Git
      git:
        uri: 'https://github.com/weiiv/candi-infra.git'
    triggers:
      - type: ConfigChange
    runPolicy: Serial
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: candi-agent
    labels:
      app: candi-agent
      app.kubernetes.io/part-of: MultiTenant
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - candi-agent
          from:
            kind: ImageStreamTag
            name: 'candi-agent:latest'
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: candi-agent
    template:
      metadata:
        labels:
          app: candi-agent
      spec:
        containers:
          - name: candi-agent
            command:
              - bash
              - -c
              - $(echo aca-py start
                --inbound-transport http '0.0.0.0' ${HTTP_INTERFACE_PORT}
                $([ ! -z "${AGENT_ENDPOINT}" ] && echo "--endpoint ${AGENT_ENDPOINT}" || echo "")
                --outbound-transport http
                --admin 0.0.0.0 ${ADMIN_INTERFACE_PORT}
                --genesis-url "${GENESIS_FILE_URL}"
                --auto-accept-invites
                --auto-accept-requests
                --auto-respond-messages
                --auto-respond-credential-proposal
                --auto-respond-credential-offer
                --auto-respond-credential-request
                --auto-respond-presentation-proposal
                --auto-respond-presentation-request
                --auto-store-credential
                --wallet-type 'indy'
                --wallet-name "$(echo ${WALLET_NAME} | tr '[:upper:]' '[:lower:]' | sed "s~-~_~g")"
                --wallet-key "${MASTER_KEY}"
                --wallet-storage-type "${WALLET_STORAGE_TYPE}"
                --wallet-storage-config "$(eval echo \"${WALLET_STORAGE_CONFIGURATION}\")"
                --wallet-storage-creds "$(eval echo \"${WALLET_STORAGE_CREDENTIALS}\")"
                $([ ! -z "${AGENT_DID_SEED}" ] && echo "--seed ${AGENT_DID_SEED}" || echo "")
                $([ ! -z "${AGENT_ADMIN_API_KEY}" ] && echo "--admin-api-key ${AGENT_ADMIN_API_KEY}" || echo "--admin-insecure-mode")
                --multitenant
                --multitenant-admin
                --jwt-secret '${JWT_SECRET}'
                --label '${AGENT_NAME}'
                --log-level ${AGENT_LOG_LEVEL});
            env:
              - name: GENESIS_FILE_URL
                value: ${GENESIS_FILE_URL}
              - name: WALLET_NAME
                value: candi_agent
              - name: WALLET_STORAGE_TYPE
                value: ${WALLET_STORAGE_TYPE}
              - name: WALLET_STORAGE_CONFIGURATION
                value: ${WALLET_STORAGE_CONFIG}
              - name: WALLET_STORAGE_CREDENTIALS
                value: ${WALLET_STORAGE_CREDS}
              - name: POSTGRESQL_WALLET_HOST
                value: ${POSTGRESQL_WALLET_HOST}
              - name: POSTGRESQL_WALLET_PORT
                value: ${POSTGRESQL_WALLET_PORT}
              - name: POSTGRESQL_WALLET_USER
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: database-user
              - name: POSTGRESQL_WALLET_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: database-password
              - name: POSTGRESQL_WALLET_ADMIN_USER
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: database-admin-user
              - name: POSTGRESQL_WALLET_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: database-admin-password
              - name: MASTER_KEY
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: master-key
              - name: AGENT_DID_SEED
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: agent-did-seed
              - name: AGENT_DID
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: agent-did
              - name: HTTP_INTERFACE_PORT
                value: ${AGENT_HTTP_PORT}
              - name: ADMIN_INTERFACE_PORT
                value: ${AGENT_ADMIN_PORT}
              - name: AGENT_ADMIN_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: admin-api-key
              - name: JWT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: candi-wallet
                    key: jwt-secret
              - name: AGENT_NAME
                value: ${AGENT_NAME}
              - name: AGENT_ENDPOINT
                value: ${AGENT_ENDPOINT}
              - name: AGENT_LOG_LEVEL
                value: ${LOG_LEVEL}
            image: " "
            ports:
              - containerPort: 3000
                protocol: TCP
              - containerPort: 8000
                protocol: TCP
            readinessProbe:
              timeoutSeconds: 30
              initialDelaySeconds: 3
              exec:
                command:
                  - bash
                  - "-c"
                  - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/ready" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'
            livenessProbe:
              timeoutSeconds: 30
              initialDelaySeconds: 300
              exec:
                command:
                  - bash
                  - "-c"
                  - 'curl --fail "http://localhost:${ADMIN_INTERFACE_PORT}/status/live" -H "X-API-KEY: ${AGENT_ADMIN_API_KEY}"'
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: candi-agent
  spec:
    selector:
      app: candi-agent
    ports:
      - name: '3000'
        protocol: TCP
        port: 3000
        targetPort: 3000
      - name: '8000'
        protocol: TCP
        port: 8000
        targetPort: 8000
- kind: Route
  apiVersion: v1
  metadata:
    name: candi-agent
  spec:
    host: candi-agent.apps.ocp1.az.uat.aro.gocloud.gov.on.ca
    to:
      kind: Service
      name: candi-agent
      weight: 100
    tls:
      termination: edge
    port:
      targetPort: 8000
    wildcardPolicy: None
- kind: Route
  apiVersion: v1
  metadata:
    name: candi-agent-admin
  spec:
    host: candi-agent-admin.apps.ocp1.az.uat.aro.gocloud.gov.on.ca
    to:
      kind: Service
      name: candi-agent
      weight: 100
    tls:
      termination: edge
    port:
      targetPort: 3000
    wildcardPolicy: None
#
# parameters
#
parameters:
- name: GENESIS_FILE_URL
  displayName: Genesis file URL
  description: The URL from which the genesis file can be downloaded.
  required: true
  value: http://test.bcovrin.vonx.io/genesis
- name: LOG_LEVEL
  displayName: Log Level
  description: The logging level of the agent.
  required: true
  value: DEBUG
- name: POSTGRESQL_WALLET_HOST
  displayName: PostgreSql key management service hostname
  required: true
  description: Hostname of the deployed PostgreSql key management service.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
  value: candi-wallet
- name: POSTGRESQL_WALLET_PORT
  displayName: PostgreSql key management service port
  required: true
  description: The port number of the deployed PostgreSql key management service.  Only used when WALLET_STORAGE_TYPE = postgres_storage.
  value: "5432"
- name: WALLET_STORAGE_TYPE
  displayName: Key management service storage type
  description: The key management service storage type.  Your choice of 'postgres_storage' or 'sqlite_storage' at the moment.  If not defined, defaults to 'sqlite_storage' for compatibility.
  required: false
  value: postgres_storage
- name: AGENT_ADMIN_PORT
  displayName: Agent Admin Port
  description: The admin port on which the service will listen.
  required: true
  value: "3000"
- name: AGENT_HTTP_PORT
  displayName: Agent http port
  description: The http port on which the service will listen.
  required: true
  value: "8000"
- name: WALLET_STORAGE_CONFIG
  displayName: Key management service storage configuration
  required: true
  description: The key management service storage configuration.
  value: '{\"url\":\"${POSTGRESQL_WALLET_HOST}:${POSTGRESQL_WALLET_PORT}\",\"max_connections\":5}'
- name: WALLET_STORAGE_CREDS
  displayName: Key management service storage credentials
  required: true
  description: The key management service credentials.
  value: '{\"account\":\"${POSTGRESQL_WALLET_USER}\",\"password\":\"${POSTGRESQL_WALLET_PASSWORD}\",\"admin_account\":\"${POSTGRESQL_WALLET_ADMIN_USER}\",\"admin_password\":\"${POSTGRESQL_WALLET_ADMIN_PASSWORD}\"}'
- name: AGENT_NAME
  displayName: Agent name
  description: The name of the agent.
  required: true
  value: "Aries-Cloud-Agent"
- name: AGENT_ENDPOINT
  displayName: Agent endpoint
  description: The endpoint of the agent.
  required: true
  value: "https://candi-agent.apps.ocp1.az.uat.aro.gocloud.gov.on.ca"
- name: AGENT_ADMIN_ENDPOINT
  displayName: Agent admin endpoint
  description: The endpoint of the agent.
  required: true
  value: "https://candi-agent-admin.apps.ocp1.az.uat.aro.gocloud.gov.on.ca"