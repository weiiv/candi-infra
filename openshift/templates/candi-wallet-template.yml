kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: candi-wallet
  annotations:
    description: aries agent connect to BCovrin test ledger
    tags: experimentation, aries, sovrin, issuer, verifier
objects:
#
# postgres wallet
#
- kind: Secret
  apiVersion: v1
  metadata:
    name: candi-build
  stringData:
    WebHookSecretKey: "${GITHUB_WEBHOOK_SECRET}"
- kind: Secret
  apiVersion: v1
  metadata:
    name: candi-wallet
    labels:
      app: candi-wallet
  stringData:
    database-user: "dbuser"
    database-password: "${POSTGRESQL_PASSWORD}"
    database-admin-user: "postgres"
    database-admin-password: "${POSTGRESQL_ADMIN_PASSWORD}"
    database-name: "${POSTGRESQL_DATABASE_NAME}"
    agent-did-seed: "${AGENT_DID_SEED}"
    agent-did: "${AGENT_DID}"
    master-key: "${MASTER_KEY}"
    admin-api-key: "${ADMIN_API_KEY}"
    jwt-secret: "${JWT_SECRET}"
- kind: Service
  apiVersion: v1
  metadata:
    name: candi-wallet
  spec:
    ports:
    - name: candi-wallet
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 0
    selector:
      name: candi-wallet
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: candi-wallet
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: candi-wallet
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: candi-wallet
      app.kubernetes.io/part-of: MultiTenant
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - candi-wallet
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: candi-wallet
    template:
      metadata:
        labels:
          name: candi-wallet
      spec:
        containers:
        - name: candi-wallet
          image: " "
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/usr/libexec/check-container"
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: candi-wallet
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: candi-wallet
                key: database-password
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: candi-wallet
                key: database-name
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: candi-wallet
                key: database-admin-password                
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - name: candi-wallet-data
            mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: candi-wallet-data
          persistentVolumeClaim:
            claimName: candi-wallet
        restartPolicy: Always
        dnsPolicy: ClusterFirst
#
# parameters
#
parameters:
- name: GITHUB_WEBHOOK_SECRET
  description: A secret string used to configure the GitHub webhook for the marketplace app build
  generate: expression 
  from: "[a-zA-Z0-9]{40}"
  required: true
- name: POSTGRESQL_PASSWORD
  displayName: PostgreSQL connection password
  description: Password for the PostgreSQL connection user. Needs to be basee64 encoded.
  required: true
  generate: "expression"
  from: "[a-zA-Z0-9]{16}"
- name: POSTGRESQL_ADMIN_PASSWORD
  displayName: PostgreSQL administrator password
  description: Password for the PostgreSQL administrative account. Needs to be basee64 encoded.
  required: true
  generate: "expression"
  from: "[a-zA-Z0-9]{16}"
- name: POSTGRESQL_DATABASE_NAME
  displayName: PostgreSQL database name
  description: Name of the PostgreSQL database.
  required: true
  value: "wallet"
- name: MASTER_KEY
  displayName: Master key
  description: The encryption key to be used for the the key management service.
  required: true
  generate: "expression"
  from: "[a-zA-Z0-9]{16}"
- name: AGENT_DID_SEED
  displayName: Agent DID seed.
  description: Seed used to create the agent DID.
  required: false
- name: AGENT_DID
  displayName: Agent DID
  description: The public DID associated to the agent.
  required: false
- name: ADMIN_API_KEY
  displayName: Agent admin API key
  description: The key used to authenticate client requests to the admin api.
  required: false
  value: ""
- name: JWT_SECRET
  displayName: JWT secret
  description: The key used for JWT creation and verification in multitenant admin api.
  required: false
  value: ""